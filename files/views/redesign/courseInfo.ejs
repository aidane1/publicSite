<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <script src = "/public/js/asyncRequest.js"></script>
    <script src = "/public/js/moment.js"></script>
    <title><%=course.course%></title>
    <style>
        * {
            box-sizing: border-box;
            font-family: sans-serif;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif
        }
        html, body {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
            position: fixed;
            top: 0px;
            left: 0px;
        }
        .myBackdrop {
            width: 100%;
            height: 100%;
            background-color: rgb(240,240,240);
            overflow: auto;
        }
        .homeHeader {
            width: 100%;
            height: 70px;
            background: linear-gradient(to right, rgb(0,153,153), rgb(0,130,209));
        }
        .homeRow {
            width: 100%;
            height: 70px;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            justify-content: space-between;
            padding: 0px 20px;
            align-items: center;
        }
        .displayText {
            color: white;
            font-size: 24px;
            font-weight: 300;
        }
        .backIcon {
            color: white;
            font-size: 22px;
            font-weight: 300;
        }
        .spacerIcon {
            color: white;
            font-size: 22px;
            visibility: hidden;
            font-weight: 300;
        }
        .iconRow {
            width: 100%;
            height: 50px;
            display: flex;
            flex-direction: row;
            align-items: center;
        }
        .infoRow {
            height: 100%;
            display: flex;
            flex-direction: row;
            align-items: center;
            flex-grow: 1;
            border-bottom: 1px solid rgb(210,210,210);
            justify-content: space-between;
            /* padding-left: 5px; */
            padding-right: 5px;
        }
        .infoKey {
            font-size: 20px;
            font-weight: 400;
        }
        .infoValue {
            font-size: 18px;
            font-weight: 100;
        }
        .last .infoRow {
            border: none;
        }
        .iconBubble {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            margin-left: 7.5px;
            margin-right: 7.5px;
            background-color: green;
            display: flex;
            flex-direction: column;
            text-align: center;
            justify-content: center;
        }
        .courseInfo {
            width: 100%;
            margin-top: 20px;
            border-top: 1px solid rgb(210,210,210);
            border-bottom: 1px solid rgb(210,210,210);
            background-color: white;
        }
        .notesAndAssignments {
            width: 100%;
            margin-top: 20px;
            padding: 10px;
            background-color: white;
            border-top: 1px solid rgb(210,210,210);
            border-bottom: 1px solid rgb(210,210,210); 
        }
        .assignments {
            padding-top: 5px;
        }
        .notes {
            padding-top: 5px;
            padding-bottom: 10px;
        }
        .assignmentsTitle {
            width: 100%;
            font-size: 20px;
            font-weight: 400;
            padding-bottom: 4px;
            border-bottom: 1px solid rgb(210,210,210);
        }
        .notesTitle {
            width: 100%;
            font-size: 20px;
            font-weight: 400;
            padding-bottom: 4px;
            border-bottom: 1px solid rgb(210,210,210);
        }
        .smallFont {
            font-size: 16px;
            color: #ddd;
            /* font-weight: 600; */
        }
        .assignmentsBody {
            width: 100%;
            padding-left: 10px;
        }
        .assignment {
            width: 100%;
            height: 50px;
            align-items: center;
            overflow-x: auto;
            display: flex;
            flex-direction: row;
            color: #5495ff;
            font-weight: 900;
            font-size: 100px;
        }
        .completedAssignment {
            /* text-decoration: line-through; */
        }
        .completedAssignment .box {
            background-color: #5495ff;
        }
        .box {
            width: 20px;
            height: 20px;
            border-radius: 3px;
            background-color: white;
            border: 3px solid #5495ff;
            margin-right: 5px;
        }
        .assignmentInfo {
            color: black;
            font-weight: 400;
            font-size: 18px;
        }
        .strikeout {
            font-size: 4em;
            line-height: 1em;
            position: relative;
        }
        .strikeout::after {
            border-bottom: 0.125em solid red;
            content: "";
            left: 0;
            margin-top: calc(0.125em / 2 * -1);
            position: absolute;
            right: 0;
            top: 50%;
        }
        .infoTab {
            margin-top: 20px;
            width: 100%;
            background-color: white;
        }
        .infoTabBar {
            
            width: 100%;
            height: 70px;
            border-bottom: 1px solid rgb(210,210,210);
            display: flex;
            flex-direction: row;
            justify-content: center;
        }
        .infoTabHolders {
            width: 70%;
            /* margin-left: 15%; */
            height: 100%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            /* border-bottom: 1px solid rgb(210,210,210); */
        }
        .infoTabTab {
            width: 50%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding-bottom: 10px;
            text-align: center;
            color: #2664c9;
            font-size: 18px;
            
        }
        .infoTabSelected {
            border-bottom: 2px solid #2664c9;
        }
        .infoBody {
            width: 100%;
            padding: 5px 10px;
        }
        .createButton {
            margin-top: 10px;
            margin-bottom: 10px;
            margin-right: 5px;
            height: 50px;
            width: 140px;
            font-size: 40px;
            font-weight: 100;
            background-color: #1d5bc1;
            color: white;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-evenly;
            border-radius: 25px;
            box-shadow: 0 1px 2px 0 #174ea64c, 0 2px 6px 2px #174ea626;
        }
        .createText {
            display: flex;
            flex-direction: column;
            justify-content: center;
            font-weight: 400;
            font-size: 14px;
            height: 100%;

        }
        .createPlus {
            display: flex;
            height: 100%;
            flex-direction: column;
            justify-content: center;
            padding-bottom: 5px;
            font-size: 35px;
            font-weight: 200;
        }
        .darkModal {
            width: 100%;
            height: 100%;
            background-color: black;
            opacity: 0.4;
            position: fixed;
            top: 0;
            left: 0;
            display: none;
        }
        .createAssignmentModal {
            display: none;
            width: 92%;
            height: 90%;
            position: fixed;
            top: 5%;
            left: 4%;
            border-radius: 10px;
            background-color: white;
            -webkit-box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            -moz-box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            overflow: hidden;
        }
        .assignmentTitle {
            width: 100%;
            height: 50px;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            align-items: center;
            justify-content: space-between;
            /* padding: 5px 10px 5px 30px; */
            padding-left: 30px;
            padding-right: 10px;
            border-bottom: 1px solid rgb(210,210,210);
            color: #174ea6;
            font-weight: 500;
        }
        .createAssignmentInfo {
            width: 100%;
            height: calc(100% - 150px);
            padding: 20px;
            overflow: auto;
            position: relative;
            z-index: 99;
            
        }
        textarea {
            border: 0;
            outline: 0;
            appearance: none;
            -webkit-appearance: none;
            border-radius: 0px;
        }
        textarea {
            border-bottom: 1px solid rgb(180,180,180);
            transition: border 0.07s linear;
        }
        textarea:focus {
            border-bottom: 2px solid #174ea6;
        }
        .createTitle {
            width: 100%;
            background-color: #f1f3f4;
            font-size: 10px;
            margin-top: 15px;
            
        }
        .createTitle textarea {
            width: 100%;
            background-color: #f1f3f4;
            font-size: 16px;
            padding: 10px 10px 5px 10px;
            caret-color: #1967d2;
        }
        .assignmentWord {
            width: 100%;
            padding-left: 10px;
            padding-top: 10px;
            font-size: 12px;
            font-weight: 500;
            color: #174ea6;
        }
        .createNotes {
            margin-top: 15px;
            background-color: #f1f3f4;
        }
        .createNotes textarea {
            width: 100%;
            height: 100px;
            background-color: #f1f3f4;
            font-size: 16px;
            padding: 10px 10px 0px 10px;
            caret-color: #1967d2;
        }
        .notesWord {
            width: 100%;
            padding-left: 10px;
            padding-top: 10px;
            font-size: 12px;
            font-weight: 500;
            color: #174ea6;
        }
        .createTitle {
            width: 100%;
            background-color: #f1f3f4;
            font-size: 10px;
            margin-top: 15px;
        }
        .createDueDate {
            margin-top: 15px;
            background-color: #f1f3f4;
        }
        .createDueDate textarea {
            width: 100%;
            background-color: #f1f3f4;
            font-size: 16px;
            padding: 10px 10px 5px 10px;
            caret-color: #1967d2;
        }
        .dueDateWord {
            width: 100%;
            padding-left: 10px;
            padding-top: 10px;
            font-size: 12px;
            font-weight: 500;
            color: #174ea6;
        }
        .createAssignmentBottom {
            width: 100%;
            height: 100px;
            display: flex;
            flex-direction: column;
            /* justify-content: end; */
            justify-content: flex-end;
            align-items: flex-end;
            padding: 15px;
            padding-bottom: 30px;
        }
        .iconsRow {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: flex-end;
            align-items: center;
        }
        .createAssignmentButton {
            margin-left: 25px;
            width: 100px;
            text-align: center;
            padding: 10px 0px;
            background-color: #ddd;
            color: #aaa;
            border-radius: 3px;
            transition: background-color 0.07s linear;
        }
        .allowed {
            background-color: #174ea6;
            color: white;
        }
        .topicList {
            
        }
        .topicGroup {
            margin-top: 10px;
        }
        .topicGroupTitle {
            font-size: 30px;
            /* padding-left: 10px; */
            /* padding-right: 5px; */
            padding-bottom: 15px;
            width: 100%;
            border-bottom: 1px solid #1967d2;
            color: #174ea6;
        }

        .topicAssignment {
            width: 100%;
            height: 70px;
            padding-left: 20px;
            padding-right: 5px;
            display: flex;
            flex-direction: row;
            align-items: center;
            border-bottom: 1px solid rgb(210,210,210);
            overflow: hidden;
        }
        .openOrChecked {
            font-size:35px;
            margin-right: 15px;
            color: #558de8;
        }
        .assignmentActionTitle {
            margin-bottom: 5px;
            font-size: 16px;
            white-space: nowrap;
        }
        .assignmentDate {
            font-size: 14px;
            color: rgb(190,190,190);
            white-space: nowrap;
        }
        .openEdit {
            /* justify-self: end; */
        }
        .last {
            border: 0 !important;
        }
        .dropdownHolder {
            position: relative;
            left: 20px;
            top: 1px;
            color: black;
            z-index: 102;
        }
        .dropdown {
            font-size: 13px;
            position: absolute;
            top: -10px;
            left: 0px;
            max-height: 0px;
            overflow: hidden;
            visibility: hidden;
            min-width: 100px;
            box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2);
            /* border: 1px solid #999; */
            transition: max-height 0.12s ease-out;
            z-index: 1000;
            margin-bottom: 20px;
        }
        .dropdownOption {
            padding-top: 12px;
            padding-bottom: 12px;
            padding-left: 10px;
            text-align: left;
            /* border: 1px solid black; */
            background-color: white;
        }
        .droppedDropDown {
            overflow: auto;
            max-height: 160px;
            visibility: visible;
        }
        .createTopic {
            margin-top: 20px;
            color: rgb(190,190,190);
            display: flex;
            flex-direction: row;
            padding-bottom: 5px;
        }
        .expandedCreateTopic {
            padding-bottom: 135px;
        }
        #createTopicButton {
            border-bottom: 1px solid #aaa;
        }
        .createTopicInput {
            position: relative;
            left: 20px;
            top: 1px;
            color: black;
            max-width: 0px;
            width: 190px;
            visibility: hidden;
            transition: max-width 0.2s ease-out;
            overflow: hidden;
            max-height: 30px;
            z-index: 101;
        }   
        .createTopicInput textarea {
            font-size: 17px;
            padding-bottom: 0px;
            height: 30px;
            max-width: 170px;
            width: 170px;
        }
        .openInput {
            max-width: 190px;
            visibility: visible;
        }
        .removeNewTopic {
            position: relative;
            top: -5px;
        }
        .assignmentDisplayBox {
            display: none;
            width: 92%;
            height: 50%;
            position: fixed;
            top: 25%;
            left: 4%;
            /* border-radius: 10px; */
            background-color: white;
            -webkit-box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            -moz-box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            box-shadow: 4px 5px 31px -6px rgba(0,0,0,0.75);
            overflow: hidden;
        }
        .assignmentDisplayTopBar {
            width: 100%;
            height: 50px;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            align-items: center;
            justify-content: space-between;
            /* padding: 5px 10px 5px 30px; */
            padding-left: 30px;
            padding-right: 10px;
            border-bottom: 1px solid rgb(210,210,210);
            color: #174ea6;
            font-weight: 500;
        }
        .assignmentDisplayBody {
            width: 100%;
            height: calc(100% - 50px);
            overflow: auto;
            padding: 20px;
        }
        .customDisplayInfo {
            width: 100%;
            margin-bottom: 20px;
        }
        .customDisplayTitle {
            font-weight: 500;
            font-size: 19px;
            color: #174ea6;
        }
        .customDisplayBody {
            font-size: 14px;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="myBackdrop" id = "backdrop">
        <div class="homeHeader">
            <div class="homeRow">
                <div class="backIcon" onclick = "window.location='/'"><i class="fas fa-chevron-left"></i></div>
                <div class="displayText"><%=course.course%></div>
                <div class="spacerIcon"><i class="fas fa-chevron-left"></i></div>
            </div>
        </div>
        <div class="courseInfo">
            <div class="class iconRow">
                <div class="iconBubble" style = "background-color: <%-icons['teacher'][1]%>"><%-icons["teacher"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Teacher: </div>
                    <div class="infoValue"><%=course.teacher.prefix%><%=course.teacher.lastName%></div>
                </div>
            </div>
            <div class="teacher iconRow">
                <div class="iconBubble" style = "background-color: <%-icons['course'][1]%>"><%-icons["course"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Course: </div>
                    <div class="infoValue"><%=course.course%></div>
                </div>
            </div>
            <div class="block iconRow last">
                <div class="iconBubble" style = "background-color: <%-icons['block'][1]%>"><%-icons["block"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Block: </div>
                    <div class="infoValue"><%=course.block%></div>
                </div>
            </div>
        </div>
        <div class="infoTab">
            <div class="infoTabBar">
                <div class="infoTabHolders">
                    <div class="infoTabTab infoTabSelected">Assignments</div>
                    <!-- <div class="infoTabTab">Notes</div> -->
                </div>
            </div>
            <div class="infoBody">
                <div class="createButton" onclick = "openModal()">
                    <div class = "createPlus">+</div><div class = "createText">Create</div>
                </div>
                <div class="topicList">
                    <% for (var i = 0; i < assignments.length; i++) { %>
                        <div class="topicGroup">
                            <div class="topicGroupTitle">
                                <%=assignments[i][0]%>
                            </div>
                            <% for (var j = 0; j < assignments[i][1].length; j++) { %>
                                <% if (j == assignments[i][1].length-1) { %>
                                    <div class="topicAssignment last">
                                        <% if (completedAssignments.indexOf(assignments[i][1][j]._id.toString()) >= 0) { %>
                                            <div class="openOrChecked checked" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                <i class="fas fa-check-circle"></i>
                                            </div>
                                        <% } else { %>
                                            <!-- <%=completedAssignments.indexOf(assignments[i][1][j]._id.toString()) > 0%> -->
                                            <div class="openOrChecked open" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                <i class="far fa-circle"></i>
                                            </div>
                                        <% } %>
                                        <div class="assignmentAndDate" onclick = "openAssignment('<%=JSON.stringify(assignments[i][1][j])%>')">
                                            <% if (assignments[i][1][j].type == "text") { %>
                                                <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment%></div>
                                            <% } else { %>
                                                <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment.split("_").slice(0, assignments[i][1][j].assignment.split("_").length-1).join("_") || "File"%> &nbsp; <span style = "font-size: 12px">(File)</span></div>
                                            <% } %>
                                            <div class="assignmentDate"><%=assignments[i][1][j].due%></div>
                                        </div>
                                        <div class="openEdit">

                                        </div>
                                    </div>
                                <% } else { %>
                                    <div class="topicAssignment">
                                        <% if (completedAssignments.indexOf(assignments[i][1][j]._id.toString()) >= 0) { %>
                                            <div class="openOrChecked checked" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                <i class="fas fa-check-circle"></i>
                                            </div>
                                        <% } else { %>
                                            <div class="openOrChecked open" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                <i class="far fa-circle"></i>
                                            </div>
                                        <% } %>
                                        <div class="assignmentAndDate" onclick = "openAssignment('<%=JSON.stringify(assignments[i][1][j])%>')"> 
                                            <% if (assignments[i][1][j].type == "text") { %>
                                                <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment%></div>
                                            <% } else { %>
                                                <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment.split("_").slice(0, assignments[i][1][j].assignment.split("_").length-1).join("_") || "File"%> &nbsp; <span style = "font-size: 12px">(File)</span></div>
                                            <% } %>
                                            <div class="assignmentDate"><%=assignments[i][1][j].due%></div>
                                        </div>
                                        <div class="openEdit">
    
                                        </div>
                                    </div>
                                <% } %>
                            <% } %>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
    <div class="darkModal" id = "darkModal">

    </div>
    <div class="assignmentDisplayBox" id = "assignmentDisplayBox">
        <div class="assignmentDisplayTopBar" id = "assignmentDisplayTopBar">
            <div>Assignment</div>
            <div onclick = "closeCustomModal()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="assignmentDisplayBody">
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Title
                </div>
                <div class="customDisplayBody" id = "customTitle">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Topic
                </div>
                <div class="customDisplayBody" id = "customTopic">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Due
                </div>
                <div class="customDisplayBody" id = "customDue">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Notes
                </div>
                <div class="customDisplayBody" id = "customNotes">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Posted
                </div>
                <div class="customDisplayBody" id = "customPosted">
                    Title
                </div>
            </div>
        </div>
    </div>


    <div class="createAssignmentModal" id = "createAssignmentModal">
        <div class="assignmentTitle">
            <div>Assignment</div>
            <div onclick = "closeModal()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="createAssignmentInfo">
            <span style = "font-weight: 500; color: rgb(190,190,190); font-size: 12px">For <%=course.course%></span>
            <div class="createTitle">
                <div class="assignmentWord">
                    Assignment
                </div>
                <textarea id = "assignmentTitle" oninput = "checkIfValid(this)"></textarea>
            </div>
            <div class="createNotes">
                <div class="notesWord">
                    Instruction/Notes (optional)
                </div>
                <textarea id = "assignmentNotes"></textarea>
            </div>
            <div class="createDueDate">
                <div class="dueDateWord">
                    Due
                </div>
                <textarea id = "assignmentDue"></textarea>
            </div>
            <div class="createTopic" id = "createTopic">
                Topic
                <div class="createTopicInput" id = "createTopicInput">
                    <textarea id = "newTopic"></textarea>
                    <i class="fas fa-times removeNewTopic" onclick = "removeNewTopic()"></i>
                    <!-- <div onclick = "removeNewTopic()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div> -->
                </div>
                <div class="dropdownHolder" id = "dropdownHolder">
                    <div class="dropdownButton" id = "dropDownButton" onclick = "extendDropDown()">
                        No Topic
                    </div>
                    <div class="dropdown" id = "dropdown">
                        <div class="dropdownOption" onclick = "selectTopic(this)">No Topic</div>
                        <div class="dropdownOption" id = "createTopicButton" onclick = "openCreateTopic()">Create Topic</div>
                        <% for (var i = 0; i < topics.length; i++) { %>
                            <div class="dropdownOption" onclick = "selectTopic(this)"><%=topics[i]%></div>
                        <% } %>
                    </div>
                </div>
            </div>
            
        </div>
        <div class="createAssignmentBottom">
            <div class="iconsRow">
                    <svg onclick = "emptyModal()" focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z"></path><path d="M9 8h2v9H9zm4 0h2v9h-2z"></path></svg>
                    <div class="createAssignmentButton" id = "createAssignmentButton" onclick = "createAssignment()">
                        Create
                    </div>
            </div>
        </div>
    </div>
</body>
<script>
    let validAssignment = false;
    let customTopic = false;
    function openAssignment(json) {
        json = JSON.parse(json);
        if (json.type == "text") {
            document.getElementById("customTitle").innerText = json.assignment;
            
        } else {
            document.getElementById("customTitle").innerHTML = `<a href = '/public/assignments/${json.assignment.split("_")[json.assignment.split("_").length-1]}'>${json.assignment.split("_").slice(0, json.assignment.split("_").length-1).join("_") || "Link"}</a>`
        }
        document.getElementById("customTopic").innerText = json.topic || "No Topic";
        document.getElementById("customDue").innerText = json.due;
        document.getElementById("customNotes").innerHTML = json.notes || "No Notes";
        document.getElementById("customPosted").innerText = moment(json.date).format('MMMM Do YYYY, h:mm:ss a') ;
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("assignmentDisplayBox");
        modal.style.display = "block";
        createAssignment.style.display = "block";
        document.getElementById("backdrop").style.overflow = "hidden";
        console.log(json);
    }
    function closeCustomModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("assignmentDisplayBox");
        modal.style.display = "none";
        createAssignment.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function checkIfValid(element) {
        let button = document.getElementById("createAssignmentButton");
        if (element.value) {
            validAssignment = true;
            button.classList.add("allowed");
        } else {
            button.classList.remove("allowed");
        }
    }
    function createAssignment() {
        let info = document.getElementById("assignmentTitle").value;
        let notes = document.getElementById("assignmentNotes").value;
        let due = document.getElementById("assignmentDue").value;
        let topic;
        if (customTopic) {
            topic = document.getElementById("newTopic").value + "&customTopic=true";
        } else {
            topic = document.getElementById("dropDownButton").innerText;
        }
        let sendString = "info=" + info + "&due=" + due + "&notes=" + notes + "&topic=" + topic;
        if (info && due) {
            sendPostRequest(sendString, "/createUserAssignment?course=<%=course._id%>", function(res) {
                if (res[0]) {
                    location.reload();
                }
            });
        }
    }
    function openCreateTopic() {
        let dropdown = document.getElementById("dropdown");
        let dropdownHolder = document.getElementById("dropdownHolder");
        dropdownHolder.style.display = "none";
        dropdown.classList.remove("droppedDropDown");
        let input = document.getElementById("createTopicInput");
        input.classList.add("openInput");
        customTopic = true;

    }
    function removeNewTopic() {
        let dropdownHolder = document.getElementById("dropdownHolder");
        dropdownHolder.style.display = "block";
        let input = document.getElementById("createTopicInput");
        input.classList.remove("openInput"); 
        customTopic = false;
    }
    function extendDropDown() {
        let dropdown = document.getElementById("dropdown");
        dropdown.classList.add("droppedDropDown");
        document.getElementById("createTopic").classList.add("expandedCreateTopic");
    }
    function selectTopic(element) {
        let dropdown = document.getElementById("dropdown");
        dropdown.classList.remove("droppedDropDown");
        document.getElementById("createTopic").classList.remove("expandedCreateTopic");
        let button = document.getElementById("dropDownButton");
        button.innerText = element.innerHTML;
    }
    function switchState(element, id) {
        if (element.classList.contains("open")) {
            element.classList.remove("open");
            element.classList.add("checked");
            element.innerHTML = '<i class="fas fa-check-circle"></i>';
            console.log(id);
            sendGetRequest("checked=true&id=" + id, "/updateAssignmentChecked", function(res) {

            });
        } else {
            element.classList.add("open");
            element.classList.remove("checked");
            element.innerHTML = '<i class="far fa-circle"></i>';
            sendGetRequest("checked=false&id=" + id, "/updateAssignmentChecked", function(res) {

            });
        }
    }
    function openModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("createAssignmentModal");
        modal.style.display = "block";
        createAssignment.style.display = "block";
        document.getElementById("backdrop").style.overflow = "hidden";
    }
    function closeModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("createAssignmentModal");
        modal.style.display = "none";
        createAssignment.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function emptyModal() {
        let title = document.getElementById("assignmentTitle");
        let notes = document.getElementById("assignmentNotes");
        let due = document.getElementById("assignmentDue");
        title.value = "";
        notes.value = "";
        due.value = "";
        let button = document.getElementById("createAssignmentButton");
        button.classList.remove("allowed");
    }
    function createModal() {
        let title = document.getElementById("assignmentTitle").value;
        let notes = document.getElementById("assignmentNotes").value;
        let due = document.getElementById("assignmentDue").value;
    }
</script>
</html>