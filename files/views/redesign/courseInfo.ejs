<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link href="https://unpkg.com/filepond/dist/filepond.css" rel="stylesheet">
    <link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css" rel="stylesheet">
    <script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js"></script>
    <script src="https://unpkg.com/filepond/dist/filepond.js"></script>
    <link rel = "stylesheet" href = "/public/css/courseInfo.min.css">
    <script src = "/public/js/asyncRequest.js"></script>
    <script src = "/public/js/moment.js"></script>
    <title><%=course.course%></title>
    <style>
        

    </style>
</head>
<body>
    <div class="myBackdrop" id = "backdrop">
        <div class="homeHeader">
            <div class="homeRow">
                <div class="backIcon" onclick = "window.location='/'"><i class="fas fa-chevron-left"></i></div>
                <div class="displayText"><%=course.course%></div>
                <div class="spacerIcon"><i class="fas fa-chevron-left"></i></div>
            </div>
        </div>
        <!-- <div class="courseInfo">
            <div class="class iconRow">
                <div class="iconBubble" style = "background-color: <%-icons['teacher'][1]%>"><%-icons["teacher"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Teacher: </div>
                    <div class="infoValue"><%=course.teacher.prefix%><%=course.teacher.lastName%></div>
                </div>
            </div>
            <div class="teacher iconRow">
                <div class="iconBubble" style = "background-color: <%-icons['course'][1]%>"><%-icons["course"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Course: </div>
                    <div class="infoValue"><%=course.course%></div>
                </div>
            </div>
            <div class="block iconRow last">
                <div class="iconBubble" style = "background-color: <%-icons['block'][1]%>"><%-icons["block"][0]%></div>
                <div class="infoRow">
                    <div class="infoKey">Block: </div>
                    <div class="infoValue"><%=course.block%></div>
                </div>
            </div>
        </div> -->
        <div class="infoTab">
            <div class="infoTabBar">
                <div class="infoTabHolders">
                    <div class="infoTabTab <%=target == 'notes' ? '' : 'infoTabSelected'%>" onclick = "moveTab(this,'assignments')">Assignments</div>
                    <div class="infoTabTab <%=target == 'notes' ? 'infoTabSelected' : ''%>" onclick = "moveTab(this, 'notes')">Notes</div>
                </div>
            </div>
            <div class="infoBodyHolder">
                <div class="infoBody" style = "display: <%=target == 'notes' ? 'block' : 'none'%>" id = "infoBodyNotes">
                    
                    <div class="createButton" onclick = "openNoteModal()">
                        <div class = "createPlus">+</div><div class = "createText">Create</div>
                    </div>
                    <div class = "noteDateList">
                        <% for (var key in notes) { %>
                            <div class="dateGroup">
                                <div class="dateGroupTitle">
                                    <%=notes[key][0]%>
                                </div>
                                <% for (var i = 0; i < notes[key][1].length; i++) { %>
                                    <% if (notes[key][1][i].noteType == "text") { %>
                                        <% if (i == notes[key][1].length-1) { %>
                                            <div class="dateNote last">
                                                <%=notes[key][1][i].text%>
                                            </div>
                                        <% } else { %>
                                            <div class="dateNote">
                                                <%=notes[key][1][i].text%>
                                            </div>
                                        <% } %>
                                    <% } else { %>
                                        
                                    <% } %>
                                <% } %>
                                <div class="noteFileGroup">
                                    <% for (var i = 0; i < notes[key][1].length; i++) { %>
                                        <% if (notes[key][1][i].noteType != "text") { %>
                                            <div class="dateNoteFile">
                                                <% if (["jpg", "jpeg", "png", "ico"].indexOf(notes[key][1][i].text.split(".")[notes[key][1][i].text.split(".").length-1].toLowerCase()) >= 0) { %>
                                                    <div class="dateNoteImage" onclick = "openImage('<%=notes[key][1][i].text%>')">
                                                        <img src = "/public/notes/<%=notes[key][1][i].text%>">
                                                    </div>
                                                <% } else { %>
                                                    <div class="dateNoteLink">
                                                        <a href = "/public/notes/<%=notes[key][1][i].text%>">File</a>
                                                    </div>
                                                <% } %>
                                            </div>
                                        <% } %>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>



                <div class="infoBody" style = "display: <%=target == 'notes' ? 'none' : 'block'%>" id = "infoBodyAssignments">
                    <div class="createButton" onclick = "openModal()">
                        <div class = "createPlus">+</div><div class = "createText">Create</div>
                    </div>
                    <div class="topicList">
                        <% for (var i = 0; i < assignments.length; i++) { %>
                            <div class="topicGroup">
                                <div class="topicGroupTitle">
                                    <%=assignments[i][0]%>
                                </div>
                                <% for (var j = 0; j < assignments[i][1].length; j++) { %>
                                    <% if (j == assignments[i][1].length-1) { %>
                                        <div class="topicAssignment last">
                                            <% if (completedAssignments.indexOf(assignments[i][1][j]._id.toString()) >= 0) { %>
                                                <div class="openOrChecked checked" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                    <i class="fas fa-check-circle"></i>
                                                </div>
                                            <% } else { %>
                                                <!-- <%=completedAssignments.indexOf(assignments[i][1][j]._id.toString()) > 0%> -->
                                                <div class="openOrChecked open" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                    <i class="far fa-circle"></i>
                                                </div>
                                            <% } %>
                                            <div class="assignmentAndDate" onclick = "openAssignment('<%=JSON.stringify(assignments[i][1][j])%>')">
                                                <% if (assignments[i][1][j].type == "text") { %>
                                                    <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment%></div>
                                                <% } else { %>
                                                    <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment.split("_").slice(0, assignments[i][1][j].assignment.split("_").length-1).join("_") || "File"%> &nbsp; <span style = "font-size: 12px">(File)</span></div>
                                                <% } %>
                                                <div class="assignmentDate"><%=assignments[i][1][j].due%></div>
                                            </div>
                                            <div class="openEdit">

                                            </div>
                                        </div>
                                    <% } else { %>
                                        <div class="topicAssignment">
                                            <% if (completedAssignments.indexOf(assignments[i][1][j]._id.toString()) >= 0) { %>
                                                <div class="openOrChecked checked" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                    <i class="fas fa-check-circle"></i>
                                                </div>
                                            <% } else { %>
                                                <div class="openOrChecked open" onclick = "switchState(this, '<%=assignments[i][1][j]._id%>')">
                                                    <i class="far fa-circle"></i>
                                                </div>
                                            <% } %>
                                            <div class="assignmentAndDate" onclick = "openAssignment('<%=JSON.stringify(assignments[i][1][j])%>')"> 
                                                <% if (assignments[i][1][j].type == "text") { %>
                                                    <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment%></div>
                                                <% } else { %>
                                                    <div class="assignmentActionTitle"><%=assignments[i][1][j].assignment.split("_").slice(0, assignments[i][1][j].assignment.split("_").length-1).join("_") || "File"%> &nbsp; <span style = "font-size: 12px">(File)</span></div>
                                                <% } %>
                                                <div class="assignmentDate"><%=assignments[i][1][j].due%></div>
                                            </div>
                                            <div class="openEdit">
        
                                            </div>
                                        </div>
                                    <% } %>
                                <% } %>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
    <div class="darkModal" id = "darkModal">

    </div>
    <div class="assignmentDisplayBox" id = "assignmentDisplayBox">
        <div class="assignmentDisplayTopBar" id = "assignmentDisplayTopBar">
            <div>Assignment</div>
            <div onclick = "closeCustomModal()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="assignmentDisplayBody">
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Title
                </div>
                <div class="customDisplayBody" id = "customTitle">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Topic
                </div>
                <div class="customDisplayBody" id = "customTopic">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Due
                </div>
                <div class="customDisplayBody" id = "customDue">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Notes
                </div>
                <div class="customDisplayBody" id = "customNotes">
                    Title
                </div>
            </div>
            <div class="customDisplayInfo">
                <div class="customDisplayTitle">
                    Posted
                </div>
                <div class="customDisplayBody" id = "customPosted">
                    Title
                </div>
            </div>
        </div>
    </div>
    <div class="imageDisplayBox" id = "imageDisplayBox">
        <div class="imageDisplayTitle">
            <div>Image</div>
            <div onclick = "closeImage()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="imageDisplay">
            <img id = "imageDisplaySrc" src = "">
        </div>
    </div>

    <div class="createNoteModal" id="createNoteModal">
        <div class="assignmentTitle">
            <div>Note</div>
            <div onclick = "closeNoteModal()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="createNoteInfo">
            <div class = "createNoteOrImage">
                <div class="noteText">
                    <div class="noteWord">
                        Note
                    </div>
                    <textarea id = "createNote" oninput="checkNoteValid(this)"></textarea>
                    <!-- <div class="createNotePlus" onclick = "sendNote()"><i class="fas fa-plus"></i></div> -->
                </div>
                <input type = "file" class = "filepond" id = "notesUpload" name = "filepond">
                <div class="takePicture">
                </div>
            </div>
        </div>
        <div class="createAssignmentBottom">
            <div class="iconsRow">
                <svg onclick = "emptyNoteModal()" focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z"></path><path d="M9 8h2v9H9zm4 0h2v9h-2z"></path></svg>
                <div class="createAssignmentButton" id = "createNoteButton" onclick = "createNote()">
                    Create
                </div>
            </div>
        </div>
    </div>

    <div class="createAssignmentModal" id = "createAssignmentModal">
        <div class="assignmentTitle">
            <div>Assignment</div>
            <div onclick = "closeModal()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div>
        </div>
        <div class="createAssignmentInfo">
            <span style = "font-weight: 500; color: rgb(190,190,190); font-size: 12px">For <%=course.course%></span>
            <div class="createTitle">
                <div class="assignmentWord">
                    Assignment
                </div>
                <textarea id = "assignmentTitle" oninput = "checkIfValid(this)"></textarea>
            </div>
            <div class="createNotes">
                <div class="notesWord">
                    Instruction/Notes (optional)
                </div>
                <textarea id = "assignmentNotes"></textarea>
            </div>
            <div class="createDueDate">
                <div class="dueDateWord">
                    Due
                </div>
                <textarea id = "assignmentDue"></textarea>
            </div>
            <div class="createTopic" id = "createTopic">
                Topic
                <div class="createTopicInput" id = "createTopicInput">
                    <textarea id = "newTopic"></textarea>
                    <i class="fas fa-times removeNewTopic" onclick = "removeNewTopic()"></i>
                    <!-- <div onclick = "removeNewTopic()"><svg focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"></path></svg></div> -->
                </div>
                <div class="dropdownHolder" id = "dropdownHolder">
                    <div class="dropdownButton" id = "dropDownButton" onclick = "extendDropDown()">
                        No Topic
                    </div>
                    <div class="dropdown" id = "dropdown">
                        <div class="dropdownOption" onclick = "selectTopic(this)">No Topic</div>
                        <div class="dropdownOption" id = "createTopicButton" onclick = "openCreateTopic()">Create Topic</div>
                        <% for (var i = 0; i < topics.length; i++) { %>
                            <div class="dropdownOption" onclick = "selectTopic(this)"><%=topics[i]%></div>
                        <% } %>
                    </div>
                </div>
            </div>
            
        </div>
        <div class="createAssignmentBottom">
            <div class="iconsRow">
                <svg onclick = "emptyModal()" focusable="false" xmlns="https://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13z"></path><path d="M9 8h2v9H9zm4 0h2v9h-2z"></path></svg>
                <div class="createAssignmentButton" id = "createAssignmentButton" onclick = "createAssignment()">
                    Create
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    FilePond.registerPlugin(
        FilePondPluginImagePreview,
    );
    FilePond.setOptions({
        server: {
            url: "/uploadNotesImage?course=<%=course._id%>",
        }
    });
    let pond = FilePond.create(document.getElementById("notesUpload"));
    pond.on("processfile", function(err, file) {
        
    });

</script>
<script>
    function checkNoteValid(element) {
        let button = document.getElementById("createNoteButton");
        if (element.value) {
            validAssignment = true;
            button.classList.add("allowed");
        } else {
            button.classList.remove("allowed");
        }
    }
    function emptyNoteModal() {
        let note = document.getElementById("createNote");
        note.value = "";
        checkNoteValid(note);
        pond.removeFile();
    }
    function moveTab(element, tab) {
        let oldPage = document.getElementById(tab == "assignments" ? "infoBodyNotes" : "infoBodyAssignments");
        let newPage = document.getElementById(tab == "notes" ? "infoBodyNotes" : "infoBodyAssignments");
        newPage.style.display = "block";
        oldPage.style.display = "none";
        let tabs = document.getElementsByClassName("infoTabTab");
        for (var i = 0; i < tabs.length; i++) {
            tabs[i].classList.remove("infoTabSelected");
        }
        element.classList.add("infoTabSelected");
    }
    let validAssignment = false;
    let customTopic = false;
    function jsonEscape(str)  {
        return str.replace(/\n/g, "\\\\n").replace(/\r/g, "\\\\r").replace(/\t/g, "\\\\t");
    }
    function openImage(src) {
        let modal = document.getElementById("darkModal");
        let displayImage = document.getElementById("imageDisplayBox");
        modal.style.display = "block";
        displayImage.style.display = "block";
        let imageSrc = document.getElementById("imageDisplaySrc").src = "/public/notes/" + src;
        document.getElementById("backdrop").style.overflow = "hidden";
    }
    function closeImage() {
        let modal = document.getElementById("darkModal");
        let displayImage = document.getElementById("imageDisplayBox");
        modal.style.display = "none";
        displayImage.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function createNote() {
        let note = document.getElementById("createNote");
        if (note.value) {
            sendPostRequest("note=" + note.value, "/uploadStudentNote?course=<%=course._id%>", function(res) {
                if (res[0] == true) {
                    pond.removeFile();
                    note.value = "";
                    checkNoteValid(note);
                }
            });
        }
    }
    function openAssignment(json) {
        json = jsonEscape(json);
        json = JSON.parse(json);
        if (json.type == "text") {
            document.getElementById("customTitle").innerText = json.assignment;
            
        } else {
            document.getElementById("customTitle").innerHTML = `<a href = '/public/assignments/${json.assignment.split("_")[json.assignment.split("_").length-1]}'>${json.assignment.split("_").slice(0, json.assignment.split("_").length-1).join("_") || "Link"}</a>`
        }
        json.notes = json.notes.replace(/(\\r\\n|\\n|\\r)/gm, "<br>");
        document.getElementById("customTopic").innerHTML = json.topic || "No Topic";
        document.getElementById("customDue").innerHTML = json.due;
        document.getElementById("customNotes").innerHTML = json.notes || "No Notes";
        document.getElementById("customPosted").innerText = moment(json.date).format('MMMM Do YYYY, h:mm:ss a') ;
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("assignmentDisplayBox");
        modal.style.display = "block";
        createAssignment.style.display = "block";
        document.getElementById("backdrop").style.overflow = "hidden";
    }
    function closeCustomModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("assignmentDisplayBox");
        modal.style.display = "none";
        createAssignment.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function checkIfValid(element) {
        let button = document.getElementById("createAssignmentButton");
        if (element.value) {
            validAssignment = true;
            button.classList.add("allowed");
        } else {
            button.classList.remove("allowed");
        }
    }
    function createAssignment() {
        let info = document.getElementById("assignmentTitle").value;
        let notes = document.getElementById("assignmentNotes").value;
        let due = document.getElementById("assignmentDue").value;
        let topic;
        if (customTopic) {
            topic = document.getElementById("newTopic").value + "&customTopic=true";
        } else {
            topic = document.getElementById("dropDownButton").innerText;
        }
        let sendString = "info=" + info + "&due=" + due + "&notes=" + notes + "&topic=" + topic;
        if (info && due) {
            sendPostRequest(sendString, "/createUserAssignment?course=<%=course._id%>", function(res) {
                if (res[0]) {
                    location.reload();
                }
            });
        }
    }
    function openCreateTopic() {
        let dropdown = document.getElementById("dropdown");
        let dropdownHolder = document.getElementById("dropdownHolder");
        dropdownHolder.style.display = "none";
        dropdown.classList.remove("droppedDropDown");
        let input = document.getElementById("createTopicInput");
        input.classList.add("openInput");
        customTopic = true;

    }
    function removeNewTopic() {
        let dropdownHolder = document.getElementById("dropdownHolder");
        dropdownHolder.style.display = "block";
        let input = document.getElementById("createTopicInput");
        input.classList.remove("openInput"); 
        customTopic = false;
    }
    function extendDropDown() {
        let dropdown = document.getElementById("dropdown");
        dropdown.classList.add("droppedDropDown");
        document.getElementById("createTopic").classList.add("expandedCreateTopic");
    }
    function selectTopic(element) {
        let dropdown = document.getElementById("dropdown");
        dropdown.classList.remove("droppedDropDown");
        document.getElementById("createTopic").classList.remove("expandedCreateTopic");
        let button = document.getElementById("dropDownButton");
        button.innerText = element.innerHTML;
    }
    function switchState(element, id) {
        if (element.classList.contains("open")) {
            element.classList.remove("open");
            element.classList.add("checked");
            element.innerHTML = '<i class="fas fa-check-circle"></i>';
            console.log(id);
            sendGetRequest("checked=true&id=" + id, "/updateAssignmentChecked", function(res) {

            });
        } else {
            element.classList.add("open");
            element.classList.remove("checked");
            element.innerHTML = '<i class="far fa-circle"></i>';
            sendGetRequest("checked=false&id=" + id, "/updateAssignmentChecked", function(res) {

            });
        }
    }
    function openModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("createAssignmentModal");
        modal.style.display = "block";
        createAssignment.style.display = "block";
        document.getElementById("backdrop").style.overflow = "hidden";
    }
    function openNoteModal() {
        let modal = document.getElementById("darkModal");
        let createNote = document.getElementById("createNoteModal");
        modal.style.display = "block";
        createNote.style.display = "block";
        document.getElementById("backdrop").style.overflow = "hidden";
    }
    function closeNoteModal() {
        let modal = document.getElementById("darkModal");
        let createNote = document.getElementById("createNoteModal");
        modal.style.display = "none";
        createNote.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function closeModal() {
        let modal = document.getElementById("darkModal");
        let createAssignment = document.getElementById("createAssignmentModal");
        modal.style.display = "none";
        createAssignment.style.display = "none";
        document.getElementById("backdrop").style.overflow = "auto";
    }
    function emptyModal() {
        let title = document.getElementById("assignmentTitle");
        let notes = document.getElementById("assignmentNotes");
        let due = document.getElementById("assignmentDue");
        title.value = "";
        notes.value = "";
        due.value = "";
        let button = document.getElementById("createAssignmentButton");
        button.classList.remove("allowed");
    }
    function createModal() {
        let title = document.getElementById("assignmentTitle").value;
        let notes = document.getElementById("assignmentNotes").value;
        let due = document.getElementById("assignmentDue").value;
    }
</script>
</html>