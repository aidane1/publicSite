<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <style>
        * {
            font-family: "Roboto", sans-serif;
            box-sizing: border-box;
        }
        body {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        .background {
            width: 100%;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
        }
        .barLeft {
            /* width: 700px; */
            width: 250px;
            height: 100%;
            background-color: rgb(28, 35, 46);
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
        }
        .bodyRight {
            width: calc(100% - 250px);
            position: relative;
            /* flex-grow: 1; */
            height: 100%;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            overflow: auto;
        }
        .bodyUpperSection {
            width: 100%;
            flex-grow: 0;
            background-color: rgb(3, 155, 229);
            margin: 0;
            padding: 0;
        }
        .bodyLowerSection {
            width: 100%;
            flex-grow: 1;   
            background-color: rgb(231,235,237);
        }
        .overPage {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
        }
        
        .barTitle {
            font-size: 27px;
            letter-spacing: 2px;
        }
        .sideBarTitle {
            width: 100%;
            height: 140px;
            padding-top: 20px;
            padding-bottom: 20px;
        }
        .headerLogo {
            width: 100%;
        }

        .sideBarTopic {
            width: 100%;
            padding: 20px;
            border-bottom: 1px solid rgb(56, 70, 90);
            cursor: pointer;
        }
        .sideBarTopic:hover {
            background-color: rgb(56, 70, 90);
        }
        .sideBarMain {
            font-size: 18px;
            color: white;
            margin-bottom: 5px;
            letter-spacing: 0.5px;
        }
        .sideBarSecondary {
            font-size: 13px;
            color: #aaa;
        }
        .sideBarOverview {
            color: white;
            padding: 20px;
            border-top: 1px solid rgb(56, 70, 90);
            border-bottom: 1px solid rgb(56, 70, 90);
        }
        .sideBarOverview:hover {
            background-color: rgb(56, 70, 90);
            cursor: pointer;
        }
        .topBar {
            width: 100%;
            height: 50px;
            /* background-color: red; */
            color: rgba(255,255,255,0.6);
            padding: 10px;
        }
        .secondaryBar {
            width: 80%;
            margin-left: auto;
            margin-right: auto;
            margin-top: 50px;
            margin-bottom: 30px;
            color: white;
        }
        .mainBody {
            width: 60%;
            height: 400px;
            background-color: white;
            margin: auto;
            border-radius: 10px;
            -webkit-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            -moz-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
        }
        .eventHolderMain {
            width: 95%;
            /* height: 500px; */
            background-color: rgb(242,242,242);
            -webkit-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            -moz-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            border-radius: 3px;
            margin: auto;
            margin-top: 20px;
            margin-bottom: 20px;
        }
        .createEventBar {
            width: 100%;
            height: 60px;
            border-bottom: 1px solid #ddd;
            position: relative;
        }
        .createEvent {
            color: white;
            float: right;
            padding: 10px 8px;
            background-color: rgb(3,155,229);
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            margin-top: 11px;
            margin-right: 8px;
        }
        .eventCategoriesBar {
            width: 100%;
            height: 40px;
            border-bottom: 1px solid #ddd;
            position: relative;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            padding: 12px;
        }
        .eventCategory {
            width: 16%;
            font-size: 13px;
            color: #666;
            padding-left: 3px;
        }
        .eventsBody {
            width: 100%;
            /* height: 400px; */
            background-color: white;
        }
        .event {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            padding: 10px 0px;
            border-bottom: 1px solid #ddd;
            position: relative;
        }
        .eventProperty {
            width: 16%;
            padding-right: 10px;
            font-size: 13px;
            padding-left: 5px;
        }
        .event:hover {
            background-color: #f5f5f5;
        }
        .editEvent {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            right: 20px;
            cursor: pointer;
            visibility: hidden;
            color: grey;
            padding-left: 5px;
            padding-right: 5px;
            z-index: 2;
        }
        .event:hover .editEvent {
            visibility: visible;
        }
        .editDelete {
            width: 100px;
            height: 75px;
            background-color: white;
            position: absolute;
            top: 10px;
            left: -90px;
            display: none;
            flex-direction: column;
            flex-wrap: nowrap;
            z-index: 3;
            box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
            -webkit-box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
            -webkit-user-select: none; /* Safari */        
            -moz-user-select: none; /* Firefox */
            -ms-user-select: none; /* IE10+/Edge */
            user-select: none; /* Standard */
        }
        .editDelete div {
            width: 100%;
            flex-grow: 1;
            text-align: center;
            padding-top: 10px;
        }
        .editDelete div:hover {
            background-color: #ddd;
        }
        .expandingBlock {
            width: 100%;
            /* height: 200px; */
            /* padding-top: 50px; */
            /* padding-bottom: 25px; */
            max-height: 0px;
            overflow: hidden;
            transition: max-height 0.3s ease-in-out;
            
        }
 
        .createEventBlock {
            width: 16%;
            margin-top: 30px;
        }
        .container {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            width: 100%;
            /* height: 200px; */
        }
        .addInput {
            width: 90%;
            height: 40px;
            font-size: 16px;
            outline: none;
            appearance: none;
            -webkit-appearance: none;
            border: 1px solid #dddddd;
            margin-left: 5px;
        }
        .buttonsRow {
            width: 100%;
            display: flex;
            flex-direction: row-reverse;
            flex-wrap: nowrap;
            margin-bottom: 20px;
            
        }
        .buttonRowButton {
            padding: 10px 8px;
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            margin-top: 11px;
            margin-right: 8px;
        }
        .cancelCreation {

        }
        .createCreation {
            color: white;
            -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            background-color: rgb(3,155,229);
        }
        .cancelCreation:hover {
            background-color: #ddd;
        }
        .customCheckBox {
            width: 40px;
            height: 40px;
            background-color: #f5f5f5;
            border: 1px solid #ccc;
            cursor: pointer;
        }
        .checked {
            background-color: rgb(3, 155, 229);
            color: white;
            text-align: center;
            font-size: 30px;
            -webkit-user-select: none; /* Safari */        
            -moz-user-select: none; /* Firefox */
            -ms-user-select: none; /* IE10+/Edge */
            user-select: none;
        }
        .notAllowed {
            background-color:  #ddd !important;
            color: #aaa !important;
            cursor: not-allowed !important;
        }
        #errorPopDown {
            padding: 20px;
            background-color: rgb(241,80,79);
            font-size: 18px;
            color: white;
            border-radius: 10px;
            position: fixed;
            left: 50%;
            transform: translateX(-50%);
            top: -100px;
            -webkit-box-shadow: -9px 10px 36px 0px rgba(0,0,0,0.75);
            -moz-box-shadow: -9px 10px 36px 0px rgba(0,0,0,0.75);
            box-shadow: -9px 10px 36px 0px rgba(0,0,0,0.75);
            transition: top 0.2s ease-out
        }
        .errorDown {
            top: 100px !important;
            cursor: pointer;
        }
        .expandingCourses {
            max-height: 0px;
            overflow: hidden;
            transition: max-height 0.2s linear;
        }
        .expandedLink {
            padding-top: 10px;
            padding-bottom: 10px;
            padding-left: 10px;
            color: #aaa;
            font-size: 13px;
        }
        .expandedLink:hover {
            background-color: rgb(56, 70, 90);
        }
        .expandedTopic {
            width: 100%;
            padding: 20px;
            border-bottom: 1px solid rgb(56, 70, 90);
            cursor: pointer;
        }
        .configureMain {
            width: 100%;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
        }
        .configureBox {
            width: 300px;
            min-height: 300px;
            border-radius: 10px;
            /* background-color: white; */
            margin: 10px;
            box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
            -webkit-box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
        }
        .configureHeader {
            width: 100%;
            text-align: center;
            font-size: 24px;
            margin-top: 10px;
        }
        .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
        }

        .switch input { 
        opacity: 0;
        width: 0;
        height: 0;
        }

        .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
        }

        .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
        }

        input:checked + .slider {
        background-color: #2196F3;
        }

        input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
        }

        /* Rounded sliders */
        .slider.round {
        border-radius: 34px;
        }

        .slider.round:before {
        border-radius: 50%;
        }
        .configureSecondary {
            font-size: 12px;
            text-align: center;
            margin-top: 10px;
        }
        .center {
            width: 100%;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            margin-top: 15px;
            justify-content: center;
            font-size: 20px;
        }
        .switchText {
            padding: 3px;
        }
        .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        }

        /* Hide the browser's default radio button */
        .container input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        }

        /* Create a custom radio button */
        .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
        }

        /* On mouse-over, add a grey background color */
        .container:hover input ~ .checkmark {
        background-color: #ccc;
        }

        /* When the radio button is checked, add a blue background */
        .container input:checked ~ .checkmark {
        background-color: #2196F3;
        }

        /* Create the indicator (the dot/circle - hidden when not checked) */
        .checkmark:after {
        content: "";
        position: absolute;
        display: none;
        }

        /* Show the indicator (dot/circle) when checked */
        .container input:checked ~ .checkmark:after {
        display: block;
        }

        /* Style the indicator (dot/circle) */
        .container .checkmark:after {
            top: 9px;
            left: 9px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: white;
        }
    </style>
</head>
<body>
    <div class = "background">
        <div class="barLeft">
            <div class="sideBarTitle">
                    <img class = "headerLogo" src = "/public/images/logo_transparent.png" />
            </div>
            <div class="sideBarOverview"  onclick = "window.location = '/dashboard/'">
                <div class="overViewMain">
                    School Overview
                </div>
            </div> 
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/masterSchedule/'" >
                <div class="sideBarMain">
                    Master Schedule
                </div>
                <div class="sideBarSecondary">
                    Edit and view the master schedule
                </div>                
            </div>
            <div class="sideBarTopic" onclick = "expandCoursesBar(this)" >
                <div class="sideBarMain">
                    Courses
                </div>
                <div class="sideBarSecondary" id = "courseSecondary">
                    Add, edit, and remove courses
                </div>        
                <div class = "expandingCourses" id = "expandingCourses">
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/categories'">
                        Categories
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/teachers'">
                        Teachers
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/courses'">
                        Courses
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/codes'">
                        Codes
                    </div>
                </div>
            </div>
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/events/'" >
                <div class="sideBarMain">
                    Events
                </div>
                <div class="sideBarSecondary">
                    Add, edit, and remove events
                </div>                
            </div>
            <div class="sideBarTopic">
                <div class="sideBarMain" style = "color: rgb(67,181,245);">
                    Configure
                </div>
                <div class="sideBarSecondary">
                    Change information displays
                </div>                
            </div>
        </div>
        <div class="bodyRight">
            <div class = "bodyUpperSection">
                <div class="topBar">
                    PVSS (sd83)
                </div>
                <div class="secondaryBar">
                    <div class="barTitle">
                        Configure
                    </div>
                </div>
            </div>
            <div class = "bodyLowerSection" id = "bodyLowerSection">
                <div class="configureMain">
                    <div class="configureBox">
                        <div class="configureHeader">Constant Length Blocks</div>
                        <div class="configureSecondary">
                            This controls whether or not corrisponding blocks on different days have the same length.
                            If yes, the format for master schedule entry changes. Default is constant.
                        </div>
                        <div class="center">
                            <span class="switchText">
                                Changing
                            </span>
                            <label class="switch">
                                <input type="checkbox" checked>
                                <span class="slider round"></span>
                            </label>
                            <span class="switchText">
                                Constant
                            </span>
                        </div>
                        
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">Schedule Type</div>
                        <div class="configureSecondary">
                            This determines what format of schedule your school is using. The
                            rotation period is the length of the schedule before repeating. default is 1 week rotation.
                            <div class="center" style = "flex-direction: column">
                            <label class="container">One
                                <input type="radio" checked="checked" name="radio">
                                <span class="checkmark"></span>
                            </label>
                            <label class="container">Two
                                <input type="radio" name="radio">
                                <span class="checkmark"></span>
                            </label>
                            <label class="container">Three
                                <input type="radio" name="radio">
                                <span class="checkmark"></span>
                            </label>
                            <label class="container">Four
                                <input type="radio" name="radio">
                                <span class="checkmark"></span>
                            </label>
                            </div>
                            
                        </div>
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">Spare Name</div>
                        <div class="configureSecondary">
                            This is the name of your schools spare block. Default is "Spare".
                        </div>
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">Available Constant Blocks</div>
                        <div class="configureSecondary">
                            These are the possible names for blocks that students have no control over (ex. Lunch, or Advisory).
                            They will show up the same on everyones schedule. Defaults are Lunch and Advisory.
                        </div>
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">Available Changing Blocks</div>
                        <div class="configureSecondary">
                            There are the possible names for blocks that students can change based on their selected courses. Defaults are
                            A,B,C,D
                        </div>
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">Semesters</div>
                        <div class="configureSecondary">
                            These are the options that will be presented to courses for start and end dates. Note: Linear should be added as its own semester.
                        </div>
                    </div>
                    <div class="configureBox">
                        <div class="configureHeader">File Rename</div>
                        <div class="configureSecondary">
                            When courses are parsed from files, the information is often not in the format you want. This tells the parser what block on your end corrisponds to what block on the schools end.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id = "errorPopDown">
        test error!
    </div>
</body>
<script>
    errorExtened = false;
    
    document.onclick = function(e) {
        if (errorExtened) {
            document.getElementById("errorPopDown").classList.remove("errorDown");
            errorExtened = false;
        }
    }
    let coursesExpanded = false;
    function expandCoursesBar(element) {
        let courses = document.getElementById("expandingCourses");
        let courseSecondary = document.getElementById("courseSecondary");
        if (coursesExpanded) {
            courses.style.maxHeight = "0px";
            coursesExpanded = false;
            element.className = "sideBarTopic";
            courseSecondary.style.visibility = "visible";
        } else {
            courses.style.maxHeight = "150px";
            coursesExpanded = true;
            element.className = "expandedTopic";
            courseSecondary.style.visibility = "hidden";
        }
    }

    

</script>
<script>
</script>
</html>