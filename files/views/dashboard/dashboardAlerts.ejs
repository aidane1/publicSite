<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Dashboard | Announcements</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/simplebar@latest/dist/simplebar.css">
    <script src="https://cdn.jsdelivr.net/npm/simplebar@latest/dist/simplebar.js"></script>
    <style>
        * {
            font-family: "Roboto", sans-serif;
            box-sizing: border-box;
        }
        body {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        .background {
            width: 100%;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
        }
        .barLeft {
            width: 250px;
            height: 100%;
            background-color: #262f3d;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
        }
        .bodyRight {
            position: relative;
            flex-grow: 1;
            height: 100%;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            overflow: auto;
        }
        .bodyUpperSection {
            width: 100%;
            flex-grow: 0;
            background-color: rgb(3, 155, 229);
            margin: 0;
            padding: 0;
        }
        .bodyLowerSection {
            width: 100%;
            flex-grow: 1;   
            background-color: #f5f7f9;
        }
        .overPage {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
        }
        
        .barTitle {
            font-size: 27px;
            letter-spacing: 2px;
        }
        .sideBarTitle {
            width: 100%;
            height: 140px;
            padding-top: 20px;
            padding-bottom: 20px;
        }
        .headerLogo {
            width: 100%;
        }

        .sideBarTopic {
            width: 100%;
            padding: 20px;
            border-bottom: 1px solid rgb(56, 70, 90);
            cursor: pointer;
        }
        .sideBarTopic:hover {
            background-color: rgb(56, 70, 90);
        }
        .sideBarMain {
            font-size: 18px;
            color: white;
            margin-bottom: 5px;
            letter-spacing: 0.5px;
        }
        .sideBarSecondary {
            font-size: 13px;
            color: #aaa;
        }
        .sideBarOverview {
            padding: 20px;
            border-top: 1px solid rgb(56, 70, 90);
            border-bottom: 1px solid rgb(56, 70, 90);
        }
        .sideBarOverview:hover {
            background-color: rgb(56, 70, 90);
            cursor: pointer;
        }
        .topBar {
            width: 100%;
            height: 50px;
            /* background-color: red; */
            color: rgba(255,255,255,0.6);
            padding: 10px;
        }
        .secondaryBar {
            width: 80%;
            margin-left: auto;
            margin-right: auto;
            margin-top: 50px;
            margin-bottom: 30px;
            color: white;
        }
        .mainBody {
            width: 60%;
            height: 400px;
            background-color: white;
            margin: auto;
            border-radius: 10px;
            -webkit-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            -moz-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            overflow: auto;
            padding: 10px;
            margin-top: 50px;
        }
        .addAlert {
            width: 100%;
            position: relative;
            /* height: 400px; */
            /* background-color: white; */
            
            /* border-radius: 10px; */
            
            margin-top: 40px;
            margin-bottom: 40px;
        }
        .recentActivity {
            width: 100%;
            padding-top: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid grey;
            display: flex;
            flex-direction: row;
            font-size: 16px;
        }
        .recentUser {
            color: red; 
        }
        .recentInfo {
            color: blue;
        }
        .recentDate {
            color: black;
        }
        .expandingCourses {
            max-height: 0px;
            overflow: hidden;
            transition: max-height 0.2s linear;
        }
        .expandedLink {
            padding-top: 10px;
            padding-bottom: 10px;
            padding-left: 10px;
            color: #aaa;
            font-size: 13px;
        }
        .expandedLink:hover {
            background-color: rgb(56, 70, 90);
        }
        .expandedTopic {
            width: 100%;
            padding: 20px;
            border-bottom: 1px solid rgb(56, 70, 90);
            cursor: pointer;
        }
        .openSideBar {
            position: fixed;
            top: 10px;
            left: 10px;
            color: white;
            width: 50px;
            height: 50px;
            font-size: 22px;
            opacity: 0.5;
            display: none;
            z-index: 100;
            cursor: pointer;
        }
        .addAlertHeader {
            font-size: 22px;
            font-weight: 300;
            margin: auto;
            margin-bottom: 10px; 
            width: 60%;
        }
        .sendAlertHolder {
            width: 60%;
            margin: auto;
        }
        .sendAlert {
            color: white;
            padding-top: 10px;
            padding-bottom: 10px;
            width: 130px;
            text-align: center;
            margin-top: 20px;
            /* height: 30px; */
            background-color: rgb(3,155,229);
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);

        }
        .addAlertInfo {
            width: 60%;
            background-color: white;
            -webkit-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            -moz-box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            box-shadow: -5px 4px 17px 2px rgba(0,0,0,0.25);
            border-radius: 10px;
            display: flex;
            flex-direction: row;
            justify-content: space-evenly;
            overflow: auto;
            margin: auto;
            padding: 10px;
        }
        .textareaHeader {
            width: 100%;
            /* padding-left: 10px; */
            padding-top: 10px;
            font-size: 17px;
            font-weight: 500;
            color: #174ea6;
        }
        textarea {
            outline: none;
            font-size: 18px;
        }
        .extendedBar {
            left: 0px !important;
        }
        .announcementList {
            width: 95%;
            max-width: 900px;
            margin: auto;
            /* padding-bottom: 60px; */
            box-shadow: 0 1px 2px 0 rgba(60,64,67,0.3), 0 1px 3px 1px rgba(60,64,67,0.15);
            border-radius: 10px;
            background-color: #f5f5f5;
            overflow: hidden;
        }
        .title {
            width: 95%;
            max-width: 900px;
            margin: auto;
            margin-top: 50px;
            margin-bottom: 10px;
            font-size: 23px;
            color: #5a6170;
        }
        .todaysAnnouncements {
            width: 95%;
            max-width: 900px;
            margin: auto;
            box-shadow: 0 1px 2px 0 rgba(60,64,67,0.3), 0 1px 3px 1px rgba(60,64,67,0.15);
            border-radius: 10px;
            background-color: #f5f5f5;
            overflow: hidden;
        }
        .todayHeadingBar {
            width: 100%;
            padding: 15px 25px;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }
        .todayHeadingBar * {
            cursor: pointer;
            color: #6697e8;
        }
        .todaysAnnouncements::after {
            content: "";
            position: relative;
            display: block;
            width: 100%;
            height: 50px;
            border-top: 1px solid #ccc;
            
        }
        .announcementBlock {
            width: 100%;
            padding: 20px 40px;
            padding-left: 50px;
            background-color: white;
            position: relative;
            cursor: grabbing;
            border-bottom: 1px solid #ccc;
        }
        .announcementHeader {
            width: 100%;
            padding: 5px 40px;
            padding-left: 30px;
            background-color: white;
            position: relative;
            font-size: 22px;
            cursor: grabbing;
            border-bottom: 1px solid #ccc;
        }
        .announcementHeader svg {
            position: absolute;
            top: 50%;
            left: 2.5px;
            width: 30px;
            height: 30px;
            transform: translateY(-50%);
            fill: grey;
            cursor: pointer;   
            display: none;
        }
        .announcementBlock:hover, .announcementHeader:hover {
            background-color: #f5f5f5;
        }
        .announcementBlock:hover svg, .announcementHeader:hover svg {
            display: block;
        }
        .announcementBlock svg {
            position: absolute;
            top: 50%;
            left: 10px;
            width: 30px;
            height: 30px;
            transform: translateY(-50%);
            fill: grey;
            cursor: pointer;
            display: none;
        }
        .announcementBlockText {
            font-size: 17px;
        }
        .announcementBlockGrades {
            font-size: 12px;
            color: #666;
            font-style: italic;
            font-weight: 900;
            margin-top: 20px;
        }
        .bottomPadding {
            width: 100%;
            height: 60px;
            border-top: 1px solid #ccc;
        }
        .searchAnnouncements {
            width: 100%;
            height: 70px;
            border-bottom: 1px solid #ccc;
            display: flex;
            flex-direction: row;
            align-items: center;
        }
        .activeSearch {
            background-color: white;
            box-shadow: 0px 1px 2px 0px rgba(60,64,67,.3), 0px 2px 6px 2px rgba(60, 64, 67, 0.15);
            border-bottom: 0;
            z-index: 10;
        }
        .searchIcon {
            font-size: 17px;
            margin-left: 25px;
            color: #999;
        }
        .searchInput {
            flex-grow: 1;
            background-color: transparent;
            border: 0;
            outline: none;
            height: 100%;
            padding-left: 15px;
            font-size: 15px;
        }
        .searchInput::placeholder {
            font-weight: 300;
            color: #999;
        }
        .announcementsTitle {
            width: 100%;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            padding: 10px 15px;
            border-bottom: 1px solid #ccc;
        }
        .createAnnouncement {
            overflow: hidden;
            height: 300px;
            max-height: 300px;
            transition: max-height 0.2s linear;
        }
        .createHeader {
            overflow: hidden;
            height: 50px;
            max-height: 50px;
            transition: max-height 0.2s linear;
            /* border-bottom: 1px solid #ccc; */
        }
        .createSubject {
            color: white;
            padding: 10px 8px;
            background-color: rgb(3,155,229);
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
        }
        .hidden {
            max-height: 1px;
        }
        .ql-toolbar  {
            border-left: 0 !important;
            border-right: 0 !important;
        }
        .ql-container {
            border-left: 0 !important;
            border-right: 0 !important;
            background-color: white;
        }
        .titleListItem {
            width: 50%;
            font-size: 13px;
            font-weight: 600; 
        }
        .announcementsBody {
            width: 100%;
            overflow-y: auto;
            max-height: 250px;
        }
        .announcement {
            width: 100%;
            padding: 10px 20px;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            background-color: white;
            border-bottom: 1px solid #ccc;
            align-items: center;
        }
        .announcementProperty {
            width: 50%;
            font-size: 13px;
            font-weight: 500;
        }
        .username {
            font-size: 14px;
            margin-bottom: 5px;
        }
        .studentID {
            font-size: 12px;
            color: #999;
            font-weight: 300;
        }
        .editPermissions {
            margin-left: 5px;
            font-size: 10px;
        }
        .infoBox {
            width: 49%;
            background-color: #f1f3f4;
            /* padding: 10px 5px 0px 5px; */
        }
        .infoBoxHeader {
            width: 100%;
            padding-left: 10px;
            padding-top: 10px;
            font-size: 15px;
            font-weight: 500;
            color: #174ea6;
        }
        .infoBox textarea {
            font-size: 16px;
            width: 100%;
            padding: 10px 10px 5px;
            caret-color: #1967d2;
            background-color: #f1f3f4;
            border: 0;
            appearance: none;
            -webkit-appearance: none;
            border-radius: 0;
            border-bottom: 1px solid #b4b4b4;
            transition: border 0.07 linear;
        }
        .infoBox textarea:focus {
            border-bottom: 2px solid #174ea6; 
        }
        .bodyModal {
            width: 100%;
            height: 0;
            overflow: auto;
            position: fixed;
            top: 0;
            left: 0;
            background-color: rgba(0,0,0,0.4);
            opacity: 0;
            transition: opacity .3s ease-out;
        }
        .openModal {
            height: 100%;
            opacity: 1;
            display: block;
            z-index: 9;
        }
        @media screen and (max-width: 1000px) {
            .barLeft {
                /* display: none; */
                transition: left 0.45s cubic-bezier(0.0,0.0,0.2,1);
                position: absolute;
                top: 0px;
                left: -250px;
                z-index: 10;
            }
            .openSideBar {
                display: block;
            }
            .topBar {
                visibility: hidden;
            }
        }
        @media screen and (max-width: 768px) {
            .mainBody {
                width: 100%;
            }
            .addAlertHeader {
                width: 95%;
            }
            .addAlertInfo {
                width: 95%;
            }
            .sendAlertHolder {
                width: 95%;
            }
        }
        .createAnnouncementBlock {
            width: 95%;
            background-color: #f5f5f5;
            box-shadow: 0 1px 2px 0 rgba(60,64,67,0.3), 0 1px 3px 1px rgba(60,64,67,0.15);
            margin: auto;
            margin-top: 20px;
        }
        .createCancel {
            color: white;
            padding: 10px 8px;
            background-color: rgb(3,155,229);
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
            display: none;
        }
        #cancelRow {
            background-color: transparent;
            box-shadow: none;
            color: black;
        }
        #cancelRow:hover {
            background-color: #ddd;
        }
        .createHeaderHolder {
            width: 100%;
            height: 100%;
            border-bottom: 1px solid #ccc;
            padding-left: 28px;
        }
        .enterHeader {
            width: 100%;
            height: 100%;
            font-size: 22px;
            border-radius: 0px;
            appearance: none;
            -webkit-appearance: none;
            background-color: transparent;
            outline: none;
            border: 0;
        }
        .expansionBlockHolder {
            width: 100%;
            padding-top: 20px;
            padding-bottom: 20px;
        }
        .expansionBlock {
            width: 95%;
            margin: auto;
            padding: 20px;
            padding-bottom: 15px;
            background-color: white;
            cursor: pointer;
        }
        .expansionBlockHeader {
            width: 100%;
            font-size: 22px;
            font-weight: 700;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            color: #444;
        }
        .editHeaderInput {
            font-size: 22px;
            color: #444;
            appearance: none;
            border-radius: 0;
            outline: 0;
            border: 0;
            width: 200px;
        }
        .expansionBlockSeperated {
            margin-top: 20px;
            box-shadow: 1px 1px 5px rgba(0,0,0,0.15);
            border-bottom: 0;
        }
        .lastBlock {
            border-bottom: 0;
        }
        .lastAnnouncement {
            border-bottom: 0;
        }
        .expansionBlockHidden {
            padding: 0 !important;
            max-height: 0 !important;
            opacity: 0;
        }
        .expansionBlockContent {
            width: 100%;
            padding: 10px 20px 0px 40px;
            overflow: hidden;
            max-height: none;
        }
        .contentBlock {
            width: 100%;
            font-size: 14px;
            margin: 10px 0px;
            line-height: 18px;
            letter-spacing: 0.4px;
            position: relative;
        }
        .arrowUp {
            transform: rotate(180deg);
        }
        .edit {
            font-size: 14px;
            padding: 10px 20px;
            color: #ddd;
        }
        .edit:hover {
            color: black;
            background-color: #ccc;
        }
        .delete {
            font-size: 14px;
            padding: 10px 20px;
            color: #ddd;
        }
        .delete:hover {
            color: red;
        }
        .editContentBlock {
            position: absolute;
            bottom: 0px;
            right: 0;
            color: black;
            padding: 10px 8px;
            /* background-color: rgb(3,155,229); */
            font-size: 15px;
            letter-spacing: 1px;
            cursor: pointer;
            /* -webkit-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */
            /* -moz-box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */
            /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */
        }
        .editContentBlock:hover {
            background-color: #ddd;
        }
        .editAnnouncements {
            width: 100%;
            height: 200px;
            max-height: 200px !important;
        }
    </style>
</head>
<body>
    <div class="openSideBar" onclick = "openSideBar()">
        <i class="fas fa-bars"></i>
    </div>
    <div class = "background">
        <div class="barLeft" id = "barLeft" data-simplebar>
            <div class="sideBarTitle">
                    <img class = "headerLogo" src = "/public/images/logo_transparent.png" />
            </div>
            <div class="sideBarOverview" style = "color: white" onclick="window.location = '/dashboard'">
                <div class="overViewMain">
                    School Overview
                </div>
            </div> 
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/masterSchedule/'">
                <div class="sideBarMain">
                    Master Schedule
                </div>
                <div class="sideBarSecondary">
                    Edit and view the master schedule
                </div>                
            </div>
            <div class="sideBarTopic">
                <div class="sideBarMain" style = "color: rgb(67,181,245);">
                    Announcements
                </div>
                <div class="sideBarSecondary">
                    Send announcements to students
                </div>                
            </div>
            <div class="sideBarTopic" onclick = "expandCoursesBar(this)" >
                <div class="sideBarMain">
                    Courses
                </div>
                <div class="sideBarSecondary" id = "courseSecondary">
                    Add, edit, and remove courses
                </div>        
                <div class = "expandingCourses" id = "expandingCourses">
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/categories'">
                        Categories
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/teachers'">
                        Teachers
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/courses'">
                        Courses
                    </div>
                    <div class="expandedLink" onclick="window.location = '/dashboard/courses/codes'">
                        Codes
                    </div>
                </div>
            </div>
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/events/'" >
                <div class="sideBarMain">
                    Events
                </div>
                <div class="sideBarSecondary">
                    Add, edit, and remove events
                </div>                
            </div>
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/configure/'" >
                <div class="sideBarMain">
                    Configure
                </div>
                <div class="sideBarSecondary">
                    Change information displays
                </div>                
            </div>
            <div class="sideBarTopic" onclick = "window.location = '/dashboard/users/users/'">
                <div class="sideBarMain">
                    Users
                </div>
                <div class="sideBarSecondary">
                    View users and permissions
                </div>                
            </div>
        </div>
        <div class="bodyRight">
            <div class = "bodyUpperSection">
                <div class="topBar">
                    PVSS (sd83)
                </div>
                <div class="secondaryBar">
                    <div class="barTitle">
                        Announcements
                    </div>
                </div>
            </div>
            <div class = "bodyLowerSection">
                <div class="title">
                    All Announcements
                </div>
                <div class="announcementList">
                    <div class="searchAnnouncements" id = "searchAnnouncements">
                        <i class="searchIcon fas fa-search"></i><input oninput = "searchText(this.value)" type="text" onfocus = "toggleBlur()" onblur = "toggleBlur()" class = "searchInput" placeholder = "Search announcements">
                    </div>
                    <div class="announcementsTitle">
                        <div class="titleListItem">
                            Date
                        </div>
                        <div class="titleListItem">
                            Announcements
                        </div>
                    </div>
                    <div class="announcementsBody">
                        <div class="announcement lastAnnouncement">
                            <div class="announcementProperty">
                                September 21st, 2018
                            </div>
                            <div class="announcementProperty" style = "color: #6697e8; text-decoration: underline; cursor: pointer">
                                View
                            </div>
                        </div>
                    </div>
                    <div class="bottomPadding"></div>
                </div>
                <div class="title">
                    Todays Announcements
                </div>
                <div class="todaysAnnouncements">
                    <div class="todayHeadingBar">
                        <div id = "newAnnouncement" class="createSubject" onclick = "toggleCreateBar('announcement')">
                            NEW ANNOUNCEMENT
                        </div>   
                        <div class="createCancel" id = "cancelRow" onclick = "cancelCreation()">CANCEL</div>
                        <div class="createCancel" id = "createButton" onclick = "create('announcement')">CREATE</div> 
                    </div>
                    <div extended = "false" id = "createAnnouncement" class="createAnnouncement hidden">
                        <div id="editor"></div>
                    </div>
                    <div class="expansionBlockHolder">
                        <div expansionEnabled="true" header="Caines Corner" class="expansionBlock expansionBlockSeperated">
                            <div class="expansionBlockHeader" onclick="openExpansionBlock(this.parentNode)">
                                <div>
                                    Caines Corner
                                </div>
                                <div class="edit" onclick="editHeader(this.parentNode.parentNode)">edit</div>
                                <div class="delete" onclick="deleteHeader(this.parentNode.parentNode)">delete</div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="expansionBlockContent expansionBlockHidden">
                                <div class="contentBlock">
                                    Women are equal and they deserve respect
                                    <br>
                                    Just kidding they can suck my dick
                                    <div class="editContentBlock">
                                        EDIT
                                    </div>
                                </div>
                                <div extended = "false" class="editAnnouncements hidden">
                                    <div class="editor"></div>
                                </div>
                            </div>
                        </div>
                        <div onclick="openExpansionBlock(this)" class="expansionBlock expansionBlockSeperated">
                            <div class="expansionBlockHeader">
                                <div>Office News</div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="expansionBlockContent expansionBlockHidden">
                                <div class="contentBlock">
                                    Women are equal and they deserve respect
                                    <br>
                                    Just kidding they can suck my dick
                                </div>
                            </div>
                        </div>
                        <div onclick="openExpansionBlock(this)" class="expansionBlock expansionBlockSeperated">
                            <div class="expansionBlockHeader">
                                <div>Career Center</div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="expansionBlockContent expansionBlockHidden">
                                <div class="contentBlock">
                                    Women are equal and they deserve respect
                                    <br>
                                    Just kidding they can suck my dick
                                </div>
                            </div>
                        </div>
                        <div onclick="openExpansionBlock(this)" class="expansionBlock expansionBlockSeperated">
                            <div class="expansionBlockHeader">
                                <div>Library</div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="expansionBlockContent expansionBlockHidden">
                                <div class="contentBlock">
                                    Women are equal and they deserve respect
                                </div>
                                <div class="contentBlock">
                                    Just kidding they can suck my dick
                                </div>
                            </div>
                        </div>
                        <div onclick="openExpansionBlock(this)" class="expansionBlock expansionBlockSeperated">
                            <div class="expansionBlockHeader">
                                <div>Miscellaneous</div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                            <div class="expansionBlockContent expansionBlockHidden">
                                <div class="contentBlock">
                                    Women are equal and they deserve respect
                                </div>
                                <div class="contentBlock">
                                    Just kidding they can suck my dick
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="bodyModal" id = "bodyModal">

    </div>
    <div class="barLeft" id = "mobileBarLeft">
        <div class="sideBarTitle">
                <img class = "headerLogo" src = "/public/images/logo_transparent.png" />
        </div>
        <div class="sideBarOverview">
            <div class="overViewMain">
                School Overview
            </div>
        </div> 
        <div class="sideBarTopic" onclick = "window.location = '/dashboard/masterSchedule/'">
            <div class="sideBarMain">
                Master Schedule
            </div>
            <div class="sideBarSecondary">
                Edit and view the master schedule
            </div>                
        </div>
        <div class="sideBarTopic" onclick = "expandSecondBar(this)" >
            <div class="sideBarMain">
                Courses
            </div>
            <div class="sideBarSecondary" id = "courseSecondarySecond">
                Add, edit, and remove courses
            </div>        
            <div class = "expandingCourses" id = "expandingCoursesSecond">
                <div class="expandedLink" onclick="window.location = '/dashboard/courses/categories'">
                    Categories
                </div>
                <div class="expandedLink" onclick="window.location = '/dashboard/courses/teachers'">
                    Teachers
                </div>
                <div class="expandedLink" onclick="window.location = '/dashboard/courses/courses'">
                    Courses
                </div>
                <div class="expandedLink" onclick="window.location = '/dashboard/courses/codes'">
                    Codes
                </div>
            </div>
        </div>
        <div class="sideBarTopic" onclick = "window.location = '/dashboard/events/'" >
            <div class="sideBarMain">
                Events
            </div>
            <div class="sideBarSecondary">
                Add, edit, and remove events
            </div>                
        </div>
        <div class="sideBarTopic" onclick = "window.location = '/dashboard/configure/'" >
            <div class="sideBarMain">
                Configure
            </div>
            <div class="sideBarSecondary">
                Change information displays
            </div>                
        </div>
        <div class="sideBarTopic" onclick = "window.location = '/dashboard/users/users/'">
            <div class="sideBarMain">
                Users
            </div>
            <div class="sideBarSecondary">
                View users and permissions
            </div>                
        </div>
    </div>
</body>
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
    let options = {
        debug: "info",

        theme: "snow",

    }
    var quill = new Quill('#editor', options);

    let editors = document.getElementsByClassName("editor");
    let quills = [];
    for (var i = 0; i < editors.length; i++) {
        let quill = new Quill(editors[i], options);
        quills.push(quill);
        // quill.addEventListener("onclick", function(click) {
        //     return false;
        // });
    }

    document.getElementById("editor").onclick = function() {
        console.log(quill.getContents());
    }
</script>
<script>
    
    let coursesExpanded = false;
    function expandCoursesBar(element) {
        let courses = document.getElementById("expandingCourses");
        let courseSecondary = document.getElementById("courseSecondary");
        if (coursesExpanded) {
            courses.style.maxHeight = "0px";
            coursesExpanded = false;
            element.className = "sideBarTopic";
            courseSecondary.style.visibility = "visible";
        } else {
            courses.style.maxHeight = "150px";
            coursesExpanded = true;
            element.className = "expandedTopic";
            courseSecondary.style.visibility = "hidden";
        }
    }
    function expandSecondBar(element) {
        let courses = document.getElementById("expandingCoursesSecond");
        let courseSecondary = document.getElementById("courseSecondarySecond");
        if (coursesExpanded) {
            courses.style.maxHeight = "0px";
            coursesExpanded = false;
            element.className = "sideBarTopic";
            courseSecondary.style.visibility = "visible";
        } else {
            courses.style.maxHeight = "150px";
            coursesExpanded = true;
            element.className = "expandedTopic";
            courseSecondary.style.visibility = "hidden";
        }
    }
    function openSideBar() {
        let bar = document.getElementById("mobileBarLeft");
        bar.classList.toggle("extendedBar");
        let modal = document.getElementById("bodyModal");
        modal.classList.toggle("openModal");
    }
    function editHeader(block) {
        block.setAttribute("expansionEnabled", "false");
        block.children[0].children[0].innerHTML = `<input type="text" onKeydown="event.key == 'Enter' ? finishEdit(this) : ''" class="editHeaderInput" value="${block.getAttribute("header")}">`;
        block.children[0].children[0].children[0].focus();
    }
    function finishEdit(block) {
        let value = block.value;
        block.parentNode.parentNode.parentNode.setAttribute("header", value);
        block.parentNode.parentNode.parentNode.setAttribute("expansionEnabled", "true");
        block.parentNode.innerHTML = value;
    }
    function deleteHeader(block) {

    }
    function openExpansionBlock(block) {
        if (block.getAttribute("expansionEnabled") === "true") {
            block.children[1].classList.toggle("expansionBlockHidden");
            block.children[0].children[3].classList.toggle("arrowUp");
        }
        return false;
    }
    let alertOut = false;
    function sendAlert() {
        let alertText = document.getElementById("alertText").value;
        let alertLink = document.getElementById("alertLink").value;
        alertOut = true;
        if (alertText) {
            let loadRequest;
            if (window.XMLHttpRequest) {
                // code for modern browsers
                loadRequest = new XMLHttpRequest();
            } else {
                // code for old IE browsers
                loadRequest = new ActiveXObject("Microsoft.XMLHTTP");
            }
            loadRequest.onreadystatechange = function() {
                alertOut = false;
                if (this.readyState == 4 && this.status == 200) {
                    let response = JSON.parse(this.responseText);
                    if (response == true) {
                        document.getElementById("alertText").value = "";
                        document.getElementById("alertLink").value = "";
                    }
                } else {
                    
                }
            }
            loadRequest.open("POST", "/createSchoolAlert", true);
            loadRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            loadRequest.send("alertText=" + alertText + "&alertLink=" + alertLink); 
        }
    }
    function cancelCreation() {
        let bar = document.getElementById("createAnnouncement");
        let buttons = document.getElementsByClassName("createSubject");
        let createCancel = document.getElementsByClassName("createCancel");
        bar.classList.add("hidden");
        bar.setAttribute("extended", "false");
        buttons[0].style.display = "block";
        createCancel[0].style.display = "none";
        createCancel[1].style.display = "none"; 
    }
    function toggleCreateBar(type) {
        let bar = document.getElementById("createAnnouncement");
        let buttons = document.getElementsByClassName("createSubject");
        let createCancel = document.getElementsByClassName("createCancel");
        
        if (type == "announcement") { 
            if (bar.getAttribute("extended") == "true") {
                bar.classList.add("hidden");
                bar.setAttribute("extended", "false");
                buttons[0].style.display = "block";
                createCancel[0].style.display = "none";
                createCancel[1].style.display = "none";
            } else {
                bar.classList.remove("hidden");
                bar.setAttribute("extended", "true");
                buttons[0].style.display = "none";
                createCancel[0].style.display = "block";
                createCancel[1].style.display = "block";
            }   
        } else if (type == "header") {
            bar.classList.add("hidden");
            bar.setAttribute("extended", "false");
            if (secondBar.getAttribute("extended") == "true") {
                secondBar.classList.add("hidden");
                secondBar.setAttribute("extended", "false");
                buttons[0].style.display = "block";
                buttons[1].style.display = "block";
                createCancel[0].style.display = "none";
                createCancel[1].style.display = "none";
            } else {
                secondBar.classList.remove("hidden");
                secondBar.setAttribute("extended", "true");
                buttons[0].style.display = "none";
                buttons[1].style.display = "none";
                createCancel[0].style.display = "block";
                createCancel[1].style.display = "block";
            } 
        } else {

        }
    }
    function toggleBlur() {
        let element = document.getElementById("searchAnnouncements");
        element.classList.toggle("activeSearch");
    }
    function searchText(text) {
        let users = document.getElementsByClassName("announcement");
        for (var i = 0; i < users.length; i++) {
            let child = users[i].children[0];
            if (child.innerText.toLowerCase().indexOf(text.toLowerCase()) >= 0) {
                users[i].style.display = "flex";
            } else {
                users[i].style.display = "none";
            }
        }
    }
</script>
</html>